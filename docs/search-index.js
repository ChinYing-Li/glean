var searchIndex = JSON.parse('{\
"benchmark":{"doc":"Glean benchmarks","i":[],"p":[]},\
"glean":{"doc":"Glean is a modern approach for recording and sending…","i":[[5,"global_glean","glean","Gets a reference to the global Glean object.",null,[[],[["mutex",3],["option",4]]]],[5,"setup_glean","","Sets or replaces the global Glean object.",null,[[["glean",3]],[["result",4],["error",3]]]],[3,"CommonMetricData","","The common set of data shared across all different metric…",null,null],[12,"name","","The metric\'s name.",0,null],[12,"category","","The metric\'s category.",0,null],[12,"send_in_pings","","List of ping names to include this metric in.",0,null],[12,"lifetime","","The metric\'s lifetime.",0,null],[12,"disabled","","Whether or not the metric is disabled.",0,null],[12,"dynamic_label","","Dynamic label. When a LabeledMetric factory creates the…",0,null],[3,"Error","","A specialized [`Error`] type for this crate\'s operations.",null,null],[3,"Glean","","The object holding meta information about a Glean instance.",null,null],[4,"Lifetime","","The supported metrics\' lifetimes.",null,null],[13,"Ping","","The metric is reset with each sent ping",1,null],[13,"Application","","The metric is reset on application restart",1,null],[13,"User","","The metric is reset with each user profile",1,null],[6,"Result","","A specialized [`Result`] type for this crate\'s operations.",null,null],[3,"Configuration","","The Glean configuration.",null,null],[12,"upload_enabled","","Whether upload should be enabled.",2,null],[12,"data_path","","Path to a directory to store all data in.",2,null],[12,"application_id","","The application ID (will be sanitized during…",2,null],[12,"max_events","","The maximum number of events to store before sending a…",2,null],[12,"delay_ping_lifetime_io","","Whether Glean should delay persistence of data from…",2,null],[12,"channel","","The release channel the application is on, if known.",2,null],[3,"ClientInfoMetrics","","Metrics included in every ping as `client_info`.",null,null],[12,"app_build","","The build identifier generated by the CI system (e.g.…",3,null],[12,"app_display_version","","The user visible version string (e.g. \\\"1.0.3\\\").",3,null],[5,"initialize","","Creates and initializes a new Glean object.",null,[[["configuration",3],["clientinfometrics",3]]]],[5,"set_upload_enabled","","Sets whether upload is enabled or not.",null,[[]]],[5,"register_ping_type","","Register a new `PingType`.",null,[[["pingtype",3]]]],[5,"submit_ping","","Collects and submits a ping for eventual uploading.",null,[[["pingtype",3],["option",4]]]],[5,"submit_ping_by_name","","Collects and submits a ping for eventual uploading by name.",null,[[["option",4]]]],[11,"unknown","","Creates the client info with dummy values for all.",3,[[]]],[0,"dispatcher","","A global dispatcher queue.",null,null],[3,"Dispatcher","glean::dispatcher","A dispatcher.",null,null],[4,"DispatchError","","The error returned from operations on the dispatcher",null,null],[13,"WorkerPanic","","The worker panicked while running a task",4,null],[13,"QueueFull","","Maximum queue size reached",4,null],[13,"AlreadyFlushed","","Pre-init buffer was already flushed",4,null],[13,"SendError","","Failed to send command to worker thread",4,null],[13,"RecvError","","Failed to receive from channel",4,null],[5,"launch","","Launches a new task on the global dispatch queue.",null,[[]]],[5,"block_on_queue","","Block until all tasks prior to this call are processed.",null,[[]]],[5,"flush_init","","Starts processing queued tasks in the global dispatch queue.",null,[[],[["dispatcherror",4],["result",4]]]],[5,"try_shutdown","","Shuts down the dispatch queue.",null,[[],[["dispatcherror",4],["result",4]]]],[11,"new","","Creates a new dispatcher with a maximum queue size.",5,[[]]],[11,"flush_init","","Flushes the pre-init buffer.",5,[[],[["dispatcherror",4],["result",4]]]],[0,"private","glean","The different metric types supported by the Glean SDK to…",null,null],[3,"BooleanMetric","glean::private","This implements the developer facing API for recording…",null,null],[3,"PingType","","Stores information about a ping.",null,null],[11,"new","","The public constructor used by automatically generated…",6,[[["commonmetricdata",3]]]],[11,"set","","Sets to the specified boolean value.",6,[[]]],[11,"test_get_value","","Exported for test purposes.",6,[[["into",8],["option",4]],["option",4]]],[11,"new","","Creates a new ping type.",7,[[["string",3],["into",8],["vec",3]]]],[11,"submit","","Submits the ping.",7,[[["option",4]]]],[11,"from","glean","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","glean::dispatcher","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","glean::private","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"clone","glean","",0,[[],["commonmetricdata",3]]],[11,"clone","","",1,[[],["lifetime",4]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","","",1,[[],[["result",4],["lifetime",4]]]],[11,"default","","",1,[[],["lifetime",4]]],[11,"default","","",0,[[],["commonmetricdata",3]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",8,[[["osstring",3]],["error",3]]],[11,"from","","",8,[[["storeerror",4]],["error",3]]],[11,"from","","",8,[[["error",3]],["error",3]]],[11,"from","","",8,[[["errorkind",4]],["error",3]]],[11,"from","","",8,[[["infallible",4]],["error",3]]],[11,"from","","",8,[[["handleerror",4]],["error",3]]],[11,"from","","",8,[[["error",3]],["error",3]]],[11,"eq","","",1,[[["lifetime",4]]]],[11,"from","glean::dispatcher","",4,[[["recverror",3]]]],[11,"from","","",4,[[["command",4],["trysenderror",4]]]],[11,"from","","",4,[[["senderror",3]]]],[11,"clone","glean","",2,[[],["configuration",3]]],[11,"clone","glean::private","",6,[[],["booleanmetric",3]]],[11,"clone","","",7,[[],["pingtype",3]]],[11,"eq","glean::dispatcher","",4,[[["dispatcherror",4]]]],[11,"ne","","",4,[[["dispatcherror",4]]]],[11,"fmt","glean","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","glean::dispatcher","",4,[[["formatter",3]],["result",6]]],[11,"fmt","glean::private","",7,[[["formatter",3]],["result",6]]],[11,"fmt","glean::dispatcher","",4,[[["formatter",3]],["result",6]]],[11,"source","","",4,[[],[["option",4],["error",8]]]],[11,"set","glean::private","Sets to the specified boolean value.",6,[[]]],[11,"test_get_value","","Exported for test purposes.",6,[[["into",8],["option",4]],["option",4]]],[11,"new","glean","Creates a new metadata object.",0,[[],["commonmetricdata",3]]],[11,"should_record","","Whether this metric should be recorded.",0,[[]]],[11,"storage_names","","The list of storages this metric should be recorded into.",0,[[]]],[11,"utf8_error","","Returns a new UTF-8 error",8,[[],["error",3]]],[11,"not_initialized","","Indicates an error that no requested global object is…",8,[[],["error",3]]],[11,"kind","","Returns the kind of the current error instance.",8,[[],["errorkind",4]]],[11,"new_for_subprocess","","Creates and initializes a new Glean object for use in a…",9,[[["configuration",3]],[["glean",3],["error",3],["result",4]]]],[11,"new","","Creates and initializes a new Glean object.",9,[[["configuration",3]],[["glean",3],["error",3],["result",4]]]],[11,"destroy_db","","Destroys the database.",9,[[]]],[11,"on_ready_to_submit_pings","","Signals that the environment is ready to submit pings.",9,[[]]],[11,"set_upload_enabled","","Sets whether upload is enabled or not.",9,[[]]],[11,"is_upload_enabled","","Determines whether upload is enabled.",9,[[]]],[11,"get_application_id","","Gets the application ID as specified on instantiation.",9,[[]]],[11,"get_data_path","","Gets the data path of this instance.",9,[[],["path",3]]],[11,"storage","","Gets a handle to the database.",9,[[],["database",3]]],[11,"event_storage","","Gets a handle to the event database.",9,[[],["eventdatabase",3]]],[11,"get_max_events","","Gets the maximum number of events to store before sending…",9,[[]]],[11,"get_upload_task","","Gets the next task for an uploader.",9,[[],["pinguploadtask",4]]],[11,"process_ping_upload_response","","Processes the response from an attempt to upload a ping.",9,[[["uploadresult",4]]]],[11,"snapshot","","Takes a snapshot for the given store and optionally clear…",9,[[],["string",3]]],[11,"submit_ping","","Collects and submits a ping for eventual uploading.",9,[[["pingtype",3],["option",4]],[["error",3],["result",4]]]],[11,"submit_ping_by_name","","Collects and submits a ping by name for eventual uploading.",9,[[["option",4]],[["error",3],["result",4]]]],[11,"get_ping_by_name","","Gets a [`PingType`] by name.",9,[[],[["pingtype",3],["option",4]]]],[11,"register_ping_type","","Register a new `PingType`.",9,[[["pingtype",3]]]],[11,"set_experiment_active","","Indicates that an experiment is running.",9,[[["option",4],["hashmap",3],["string",3]]]],[11,"set_experiment_inactive","","Indicates that an experiment is no longer running.",9,[[["string",3]]]],[11,"persist_ping_lifetime_data","","Persists Lifetime::Ping data that might be in memory in…",9,[[],[["result",4],["error",3]]]],[11,"clear_application_lifetime_metrics","","** This is not meant to be used directly.**",9,[[]]],[11,"is_first_run","","Whether or not this is the first run on this profile.",9,[[]]],[11,"set_debug_view_tag","","Sets a debug view tag.",9,[[]]],[11,"set_source_tags","","Sets source tags.",9,[[["vec",3],["string",3]]]],[11,"set_log_pings","","Sets the log pings debug option.",9,[[]]],[11,"set_dirty_flag","","** This is not meant to be used directly.**",9,[[]]],[11,"is_dirty_flag_set","","** This is not meant to be used directly.**",9,[[]]],[11,"test_is_experiment_active","","Test-only API (exported for FFI purposes).",9,[[["string",3]]]],[11,"test_get_experiment_data_as_json","","Test-only API (exported for FFI purposes).",9,[[["string",3]],[["string",3],["option",4]]]],[11,"test_clear_all_stores","","Test-only API (exported for FFI purposes).",9,[[]]],[11,"as_str","","String representation of the lifetime.",1,[[]]]],"p":[[3,"CommonMetricData"],[4,"Lifetime"],[3,"Configuration"],[3,"ClientInfoMetrics"],[4,"DispatchError"],[3,"Dispatcher"],[3,"BooleanMetric"],[3,"PingType"],[3,"Error"],[3,"Glean"]]},\
"glean_core":{"doc":"Glean is a modern approach for recording and sending…","i":[[3,"CommonMetricData","glean_core","The common set of data shared across all different metric…",null,null],[12,"name","","The metric\'s name.",0,null],[12,"category","","The metric\'s category.",0,null],[12,"send_in_pings","","List of ping names to include this metric in.",0,null],[12,"lifetime","","The metric\'s lifetime.",0,null],[12,"disabled","","Whether or not the metric is disabled.",0,null],[12,"dynamic_label","","Dynamic label. When a LabeledMetric factory creates the…",0,null],[3,"Error","","A specialized [`Error`] type for this crate\'s operations.",null,null],[3,"Configuration","","The Glean configuration.",null,null],[12,"upload_enabled","","Whether upload should be enabled.",1,null],[12,"data_path","","Path to a directory to store all data in.",1,null],[12,"application_id","","The application ID (will be sanitized during…",1,null],[12,"language_binding_name","","The name of the programming language used by the binding…",1,null],[12,"max_events","","The maximum number of events to store before sending a…",1,null],[12,"delay_ping_lifetime_io","","Whether Glean should delay persistence of data from…",1,null],[3,"Glean","","The object holding meta information about a Glean instance.",null,null],[4,"Lifetime","","The supported metrics\' lifetimes.",null,null],[13,"Ping","","The metric is reset with each sent ping",2,null],[13,"Application","","The metric is reset on application restart",2,null],[13,"User","","The metric is reset with each user profile",2,null],[4,"ErrorKind","","A list enumerating the categories of errors in this crate.",null,null],[13,"Lifetime","","Lifetime conversion failed",3,null],[13,"Handle","","FFI-Support error",3,null],[13,"IoError","","IO error",3,null],[13,"Rkv","","IO error",3,null],[13,"Json","","JSON error",3,null],[13,"TimeUnit","","TimeUnit conversion failed",3,null],[13,"MemoryUnit","","MemoryUnit conversion failed",3,null],[13,"HistogramType","","HistogramType conversion failed",3,null],[13,"OsString","","OsString conversion failed",3,null],[13,"Utf8Error","","Unknown error",3,null],[13,"InvalidConfig","","Glean initialization was attempted with an invalid…",3,null],[13,"NotInitialized","","Glean not initialized",3,null],[13,"PingBodyOverflow","","Ping request body size overflowed",3,null],[4,"ErrorType","","The possible error types for metric recording. Note: the…",null,null],[13,"InvalidValue","","For when the value to be recorded does not match the…",4,null],[13,"InvalidLabel","","For when the label of a labeled metric does not match the…",4,null],[13,"InvalidState","","For when the metric caught an invalid state while recording",4,null],[13,"InvalidOverflow","","For when the value to be recorded overflows the…",4,null],[5,"test_get_num_recorded_errors","","Gets the number of recorded errors for the given metric…",null,[[["glean",3],["option",4],["errortype",4],["commonmetricdata",3]],[["string",3],["result",4]]]],[5,"global_glean","","Gets a reference to the global Glean object.",null,[[],[["option",4],["mutex",3]]]],[5,"setup_glean","","Sets or replaces the global Glean object.",null,[[["glean",3]],["result",6]]],[11,"as_str","","String representation of the lifetime.",2,[[]]],[11,"new","","Creates a new metadata object.",0,[[["string",3],["into",8]],["commonmetricdata",3]]],[11,"should_record","","Whether this metric should be recorded.",0,[[]]],[11,"storage_names","","The list of storages this metric should be recorded into.",0,[[]]],[11,"utf8_error","","Returns a new UTF-8 error",5,[[],["error",3]]],[11,"not_initialized","","Indicates an error that no requested global object is…",5,[[],["error",3]]],[11,"kind","","Returns the kind of the current error instance.",5,[[],["errorkind",4]]],[11,"as_str","","The error type\'s metric id",4,[[]]],[0,"metrics","","The different metric types supported by the Glean SDK to…",null,null],[3,"RecordedEvent","glean_core::metrics","Represents the recorded data for a single event.",null,null],[12,"timestamp","","The timestamp of when the event was recorded.",6,null],[12,"category","","The event\'s category.",6,null],[12,"name","","The event\'s name.",6,null],[12,"extra","","A map of all extra data values.",6,null],[3,"BooleanMetric","","A boolean metric.",null,null],[3,"CounterMetric","","A counter metric.",null,null],[3,"CustomDistributionMetric","","A custom distribution metric.",null,null],[3,"DatetimeMetric","","A datetime metric.",null,null],[3,"EventMetric","","An event metric.",null,null],[3,"JweMetric","","A JWE metric.",null,null],[3,"LabeledMetric","","A labeled metric.",null,null],[3,"MemoryDistributionMetric","","A memory distribution metric.",null,null],[3,"PingType","","Stores information about a ping.",null,null],[12,"name","","The name of the ping.",7,null],[12,"include_client_id","","Whether the ping should include the client ID.",7,null],[12,"send_if_empty","","Whether the ping should be sent if it is empty",7,null],[12,"reason_codes","","The \\\"reason\\\" codes that this ping can send",7,null],[3,"QuantityMetric","","A quantity metric.",null,null],[3,"StringMetric","","A string metric.",null,null],[3,"StringListMetric","","A string list metric.",null,null],[3,"TimespanMetric","","A timespan metric.",null,null],[3,"TimingDistributionMetric","","A timing distribution metric.",null,null],[3,"UuidMetric","","An UUID metric.",null,null],[3,"DistributionData","","A snapshot of all buckets and the accumulated sum of a…",null,null],[12,"values","","A map containig the bucket index mapped to the accumulated…",8,null],[12,"sum","","The accumulated sum of all the samples in the distribution.",8,null],[4,"HistogramType","","Different kinds of histograms.",null,null],[13,"Linear","","A histogram with linear distributed buckets.",9,null],[13,"Exponential","","A histogram with exponential distributed buckets.",9,null],[4,"MemoryUnit","","Different resolutions supported by the memory related…",null,null],[13,"Byte","","1 byte",10,null],[13,"Kilobyte","","2^10 bytes",10,null],[13,"Megabyte","","2^20 bytes",10,null],[13,"Gigabyte","","2^30 bytes",10,null],[4,"TimeUnit","","Different resolutions supported by the time related metric…",null,null],[13,"Nanosecond","","Truncate to nanosecond precision.",11,null],[13,"Microsecond","","Truncate to microsecond precision.",11,null],[13,"Millisecond","","Truncate to millisecond precision.",11,null],[13,"Second","","Truncate to second precision.",11,null],[13,"Minute","","Truncate to minute precision.",11,null],[13,"Hour","","Truncate to hour precision.",11,null],[13,"Day","","Truncate to day precision.",11,null],[4,"Metric","","The available metrics.",null,null],[13,"Boolean","","A boolean metric. See `BooleanMetric` for more information.",12,null],[13,"Counter","","A counter metric. See `CounterMetric` for more information.",12,null],[13,"CustomDistributionExponential","","A custom distribution with precomputed exponential…",12,null],[13,"CustomDistributionLinear","","A custom distribution with precomputed linear bucketing.…",12,null],[13,"Datetime","","A datetime metric. See `DatetimeMetric` for more…",12,null],[13,"Experiment","","An experiment metric. See `ExperimentMetric` for more…",12,null],[13,"Quantity","","A quantity metric. See `QuantityMetric` for more…",12,null],[13,"String","","A string metric. See `StringMetric` for more information.",12,null],[13,"StringList","","A string list metric. See `StringListMetric` for more…",12,null],[13,"Uuid","","A UUID metric. See `UuidMetric` for more information.",12,null],[13,"Timespan","","A timespan metric. See `TimespanMetric` for more…",12,null],[13,"TimingDistribution","","A timing distribution. See `TimingDistributionMetric` for…",12,null],[13,"MemoryDistribution","","A memory distribution. See `MemoryDistributionMetric` for…",12,null],[13,"Jwe","","A JWE metric. See `JweMetric` for more information.",12,null],[5,"combine_base_identifier_and_label","","Combines a metric\'s base identifier and label",null,[[],["string",3]]],[5,"dynamic_label","","Validates a dynamic label, changing it to OTHER_LABEL if…",null,[[["glean",3],["commonmetricdata",3]],["string",3]]],[5,"strip_label","","Strips the label off of a complete identifier",null,[[]]],[11,"new","","Creates a new boolean metric.",13,[[["commonmetricdata",3]]]],[11,"set","","Sets to the specified boolean value.",13,[[["glean",3]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",13,[[["glean",3]],["option",4]]],[11,"new","","Creates a new counter metric.",14,[[["commonmetricdata",3]]]],[11,"add","","Increases the counter by `amount`.",14,[[["glean",3]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",14,[[["glean",3]],["option",4]]],[11,"new","","Creates a new memory distribution metric.",15,[[["histogramtype",4],["commonmetricdata",3]]]],[11,"accumulate_samples_signed","","Accumulates the provided signed samples in the metric.",15,[[["glean",3],["vec",3]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",15,[[["glean",3]],[["distributiondata",3],["option",4]]]],[11,"test_get_value_as_json_string","","Test-only API (exported for FFI purposes).",15,[[["glean",3]],[["string",3],["option",4]]]],[11,"new","","Creates a new datetime metric.",16,[[["timeunit",4],["commonmetricdata",3]]]],[11,"set_with_details","","Sets the metric to a date/time including the timezone…",16,[[["glean",3]]]],[11,"set","","Sets the metric to a date/time which including the…",16,[[["glean",3],["datetime",6],["option",4]]]],[11,"test_get_value_as_string","","Test-only API (exported for FFI purposes).",16,[[["glean",3]],[["string",3],["option",4]]]],[11,"new","","Creates a new event metric.",17,[[["string",3],["vec",3],["commonmetricdata",3]]]],[11,"record","","Records an event.",17,[[["glean",3],["option",4],["into",8]]]],[11,"test_has_value","","Test-only API (exported for FFI purposes).",17,[[["glean",3]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",17,[[["glean",3]],[["vec",3],["option",4]]]],[11,"test_get_value_as_json_string","","Test-only API (exported for FFI purposes).",17,[[["glean",3]],["string",3]]],[11,"new","","Creates a new JWE metric.",18,[[["commonmetricdata",3]]]],[11,"set_with_compact_representation","","Sets to the specified JWE value.",18,[[["glean",3],["string",3],["into",8]]]],[11,"set","","Builds a JWE value from its elements and set to it.",18,[[["glean",3],["string",3],["into",8]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",18,[[["glean",3]],[["string",3],["option",4]]]],[11,"test_get_value_as_json_string","","Test-only API (exported for FFI purposes).",18,[[["glean",3]],[["string",3],["option",4]]]],[11,"new","","Creates a new labeled metric from the given metric…",19,[[["option",4],["vec",3]],["labeledmetric",3]]],[11,"get","","Gets a specific metric for a given label.",19,[[]]],[11,"get_submetric","","Gets the template submetric.",19,[[]]],[11,"new","","Creates a new memory distribution metric.",20,[[["memoryunit",4],["commonmetricdata",3]]]],[11,"accumulate","","Accumulates the provided sample in the metric.",20,[[["glean",3]]]],[11,"accumulate_samples_signed","","Accumulates the provided signed samples in the metric.",20,[[["glean",3],["vec",3]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",20,[[["glean",3]],[["distributiondata",3],["option",4]]]],[11,"test_get_value_as_json_string","","Test-only API (exported for FFI purposes).",20,[[["glean",3]],[["string",3],["option",4]]]],[11,"as_bytes","","Converts a value in the given unit to bytes.",10,[[]]],[11,"new","","Creates a new ping type for the given name, whether to…",7,[[["string",3],["into",8],["vec",3]]]],[11,"submit","","Submits the ping for eventual uploading",7,[[["glean",3],["option",4]],["result",6]]],[11,"new","","Creates a new quantity metric.",21,[[["commonmetricdata",3]]]],[11,"set","","Sets the value. Must be non-negative.",21,[[["glean",3]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",21,[[["glean",3]],["option",4]]],[11,"new","","Creates a new string metric.",22,[[["commonmetricdata",3]]]],[11,"set","","Sets to the specified value.",22,[[["glean",3],["string",3],["into",8]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",22,[[["glean",3]],[["string",3],["option",4]]]],[11,"new","","Creates a new string list metric.",23,[[["commonmetricdata",3]]]],[11,"add","","Adds a new string to the list.",23,[[["glean",3],["string",3],["into",8]]]],[11,"set","","Sets to a specific list of strings.",23,[[["glean",3],["string",3],["vec",3]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",23,[[["glean",3]],[["option",4],["vec",3]]]],[11,"test_get_value_as_json_string","","Test-only API (exported for FFI purposes).",23,[[["glean",3]],[["string",3],["option",4]]]],[11,"format_pattern","","Formats the given time unit, truncating the time if needed.",11,[[]]],[11,"duration_convert","","Converts a duration to the requested time unit.",11,[[["duration",3]]]],[11,"as_nanos","","Converts a duration in the given unit to nanoseconds.",11,[[]]],[11,"new","","Creates a new timespan metric.",24,[[["timeunit",4],["commonmetricdata",3]]]],[11,"set_start","","Starts tracking time for the provided metric.",24,[[["glean",3]]]],[11,"set_stop","","Stops tracking time for the provided metric. Sets the…",24,[[["glean",3]]]],[11,"cancel","","Aborts a previous `start` call. No error is recorded if no…",24,[[]]],[11,"set_raw","","Explicitly sets the timespan value.",24,[[["glean",3],["duration",3]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",24,[[["glean",3]],["option",4]]],[11,"new","","Creates a new timing distribution metric.",25,[[["timeunit",4],["commonmetricdata",3]]]],[11,"set_start","","Starts tracking time for the provided metric.",25,[[],["timerid",6]]],[11,"set_stop_and_accumulate","","Stops tracking time for the provided metric and associated…",25,[[["glean",3],["timerid",6]]]],[11,"cancel","","Aborts a previous `set_start` call. No error is recorded…",25,[[["timerid",6]]]],[11,"accumulate_samples_signed","","Accumulates the provided signed samples in the metric.",25,[[["glean",3],["vec",3]]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",25,[[["glean",3]],[["distributiondata",3],["option",4]]]],[11,"test_get_value_as_json_string","","Test-only API (exported for FFI purposes).",25,[[["glean",3]],[["string",3],["option",4]]]],[11,"new","","Creates a new UUID metric",26,[[["commonmetricdata",3]]]],[11,"set","","Sets to the specified value.",26,[[["glean",3],["uuid",3]]]],[11,"generate_and_set","","Generates a new random UUID and set the metric to it.",26,[[["glean",3]],["uuid",3]]],[11,"test_get_value","","Test-only API (exported for FFI purposes).",26,[[["glean",3]],[["string",3],["option",4]]]],[6,"Datetime","","A datetime type.",null,null],[6,"TimerId","","Identifier for a running timer.",null,null],[8,"MetricType","","A `MetricType` describes common behavior across all metrics.",null,null],[10,"meta","","Access the stored metadata",27,[[],["commonmetricdata",3]]],[10,"meta_mut","","Access the stored metadata mutable",27,[[],["commonmetricdata",3]]],[11,"should_record","","Whether this metric should currently be recorded",27,[[["glean",3]]]],[11,"ping_section","","Gets the ping section the metric fits into.",12,[[]]],[11,"as_json","","The JSON representation of the metric\'s data",12,[[],["jsonvalue",4]]],[0,"ping","glean_core","Ping collection, assembly & submission.",null,null],[3,"PingMaker","glean_core::ping","Collect a ping\'s data, assemble it into its full payload…",null,null],[11,"new","","Creates a new PingMaker.",28,[[]]],[11,"collect","","Collects a snapshot for the given ping from storage and…",28,[[["glean",3],["option",4],["pingtype",3]],[["jsonvalue",4],["option",4]]]],[11,"collect_string","","Collects a snapshot for the given ping from storage and…",28,[[["glean",3],["option",4],["pingtype",3]],[["string",3],["option",4]]]],[11,"store_ping","","Stores a ping to disk in the pings directory.",28,[[["glean",3],["path",3],["jsonvalue",4]],["result",6]]],[11,"clear_pending_pings","","Clears any pending pings in the queue.",28,[[["path",3]],["result",6]]],[0,"storage","glean_core","Storage snapshotting.",null,null],[3,"StorageManager","glean_core::storage","Snapshot metrics from the underlying database.",null,null],[11,"snapshot","","Snapshots the given store and optionally clear it.",29,[[["database",3]],[["string",3],["option",4]]]],[11,"snapshot_as_json","","Snapshots the given store and optionally clear it.",29,[[["database",3]],[["jsonvalue",4],["option",4]]]],[11,"snapshot_metric","","Gets the current value of a single metric identified by…",29,[[["database",3]],[["option",4],["metric",4]]]],[11,"snapshot_experiments_as_json","","Snapshots the experiments.",29,[[["database",3]],[["jsonvalue",4],["option",4]]]],[0,"traits","glean_core","Important: consider this module unstable / experimental.",null,null],[3,"RecordedEvent","glean_core::traits","Represents the recorded data for a single event.",null,null],[12,"timestamp","","The timestamp of when the event was recorded.",6,null],[12,"category","","The event\'s category.",6,null],[12,"name","","The event\'s name.",6,null],[12,"extra","","A map of all extra data values.",6,null],[4,"HistogramType","","Different kinds of histograms.",null,null],[13,"Linear","","A histogram with linear distributed buckets.",9,null],[13,"Exponential","","A histogram with exponential distributed buckets.",9,null],[8,"Boolean","","A description for the `BooleanMetric` type.",null,null],[10,"set","","Sets to the specified boolean value.",30,[[]]],[10,"test_get_value","","Exported for test purposes.",30,[[["into",8],["option",4]],["option",4]]],[8,"Counter","","A description for the `CounterMetric` type.",null,null],[10,"add","","Increases the counter by `amount`.",31,[[]]],[10,"test_get_value","","Exported for test purposes.",31,[[["into",8],["option",4]],["option",4]]],[8,"CustomDistribution","","A description for the `CustomDistributionMetric` type.",null,null],[10,"accumulate_samples_signed","","Accumulates the provided signed samples in the metric.",32,[[["vec",3]]]],[10,"test_get_value","","Exported for test purposes.",32,[[["into",8],["option",4]],[["option",4],["distributiondata",3]]]],[10,"test_get_value_as_json_string","","Exported for test purposes.",32,[[["into",8],["option",4]],[["string",3],["option",4]]]],[8,"Datetime","","A description for the `DatetimeMetric` type.",null,null],[10,"set_with_details","","Sets the metric to a date/time including the timezone…",33,[[]]],[10,"set","","Sets the metric to a date/time which including the…",33,[[["option",4],["datetime",6]]]],[10,"test_get_value","","Exported for test purposes.",33,[[["into",8],["option",4]],[["option",4],["datetime",6]]]],[10,"test_get_value_as_string","","Exported for test purposes.",33,[[["into",8],["option",4]],[["string",3],["option",4]]]],[8,"Event","","A description for the `EventMetric` type.",null,null],[10,"record","","Records an event.",34,[[["option",4],["into",8]]]],[10,"test_get_value","","Exported for test purposes.",34,[[["into",8],["option",4]],[["vec",3],["option",4]]]],[10,"test_get_value_as_json_string","","Exported for test purposes.",34,[[["into",8],["option",4]],[["string",3],["option",4]]]],[8,"Jwe","","A description for the `JweMetric` type.",null,null],[10,"set_with_compact_representation","","Sets to the specified JWE value.",35,[[["string",3],["into",8]]]],[10,"set","","Builds a JWE value from its elements and set to it.",35,[[["string",3],["into",8]]]],[10,"test_get_value","","Exported for test purposes.",35,[[["into",8],["option",4]],[["string",3],["option",4]]]],[10,"test_get_value_as_json_string","","Exported for test purposes.",35,[[["into",8],["option",4]],[["string",3],["option",4]]]],[8,"Labeled","","A description for the `LabeledMetric` type.",null,null],[10,"get","","Gets a specific metric for a given label.",36,[[]]],[10,"get_submetric","","Gets the template submetric.",36,[[]]],[8,"MemoryDistribution","","A description for the `MemoryDistributionMetric` type.",null,null],[10,"accumulate","","Accumulates the provided sample in the metric.",37,[[]]],[10,"accumulate_samples_signed","","Accumulates the provided signed samples in the metric.",37,[[["vec",3]]]],[10,"test_get_value","","Exported for test purposes.",37,[[["into",8],["option",4]],[["distributiondata",3],["option",4]]]],[10,"test_get_value_as_json_string","","Exported for test purposes.",37,[[["into",8],["option",4]],[["string",3],["option",4]]]],[8,"Ping","","A description for the `PingType` type.",null,null],[10,"submit","","Submits the ping for eventual uploading",38,[[["option",4]],["result",6]]],[8,"Quantity","","A description for the `QuantityMetric` type.",null,null],[10,"set","","Sets the value. Must be non-negative.",39,[[]]],[10,"test_get_value","","Exported for test purposes.",39,[[["into",8],["option",4]],["option",4]]],[8,"String","","A description for the `StringMetric` type.",null,null],[10,"set","","Sets to the specified value.",40,[[["string",3],["into",8]]]],[10,"test_get_value","","Exported for test purposes.",40,[[["into",8],["option",4]],[["option",4],["string",3]]]],[8,"StringList","","A description for the `StringListMetric` type.",null,null],[10,"add","","Adds a new string to the list.",41,[[["string",3],["into",8]]]],[10,"set","","Sets to a specific list of strings.",41,[[["string",3],["vec",3]]]],[10,"test_get_value","","Exported for test purposes.",41,[[["into",8],["option",4]],[["option",4],["vec",3]]]],[10,"test_get_value_as_json_string","","Exported for test purposes.",41,[[["into",8],["option",4]],[["string",3],["option",4]]]],[8,"Timespan","","A description for the `TimespanMetric` type.",null,null],[10,"set_start","","Starts tracking time for the provided metric.",42,[[]]],[10,"set_stop","","Stops tracking time for the provided metric. Sets the…",42,[[]]],[10,"cancel","","Aborts a previous `start` call. No error is recorded if no…",42,[[]]],[10,"set_raw","","Explicitly sets the timespan value.",42,[[["duration",3]]]],[10,"test_get_value","","Exported for test purposes.",42,[[["into",8],["option",4]],["option",4]]],[8,"TimingDistribution","","A description for the `TimingDistributionMetric` type.",null,null],[10,"set_start","","Starts tracking time for the provided metric.",43,[[]]],[10,"set_stop_and_accumulate","","Stops tracking time for the provided metric and associated…",43,[[["timerid",6]]]],[10,"cancel","","Aborts a previous `set_start` call. No error is recorded…",43,[[["timerid",6]]]],[10,"accumulate_samples_signed","","Accumulates the provided signed samples in the metric.",43,[[["vec",3]]]],[10,"test_get_value","","Exported for test purposes.",43,[[["into",8],["option",4]],[["distributiondata",3],["option",4]]]],[10,"test_get_value_as_json_string","","Exported for test purposes.",43,[[["into",8],["option",4]],[["string",3],["option",4]]]],[8,"Uuid","","A description for the `UuidMetric` type.",null,null],[10,"set","","Sets to the specified value.",44,[[["uuid",3]]]],[10,"generate_and_set","","Generates a new random UUID and set the metric to it.",44,[[],["uuid",3]]],[10,"test_get_value","","Exported for test purposes.",44,[[["into",8],["option",4]],[["string",3],["option",4]]]],[0,"upload","glean_core","Manages the pending pings queue and directory.",null,null],[3,"PingRequest","glean_core::upload","Represents a request to upload a ping.",null,null],[12,"document_id","","The Job ID to identify this request, this is the same as…",45,null],[12,"path","","The path for the server to upload the ping to.",45,null],[12,"body","","The body of the request, as a byte array. If gzip encoded,…",45,null],[12,"headers","","A map with all the headers to be sent with the request.",45,null],[3,"PingUploadManager","","Manages the pending pings queue and directory.",null,null],[4,"UploadResult","","The result of an attempted ping upload.",null,null],[13,"RecoverableFailure","","A recoverable failure.",46,null],[13,"UnrecoverableFailure","","An unrecoverable upload failure.",46,null],[13,"HttpStatus","","A HTTP response code.",46,null],[4,"PingUploadTask","","An enum representing the possible upload tasks to be…",null,null],[13,"Upload","","A PingRequest popped from the front of the queue. See…",47,null],[13,"Wait","","A flag signaling that the pending pings directories are…",47,null],[13,"Done","","A flag signaling that requester doesn\'t need to request…",47,null],[5,"chunked_log_info","","Logs payload in one go (all other OS).",null,[[]]],[0,"ffi_upload_result","","Result values of attempted ping uploads encoded for FFI use.",null,null],[17,"UPLOAD_RESULT_RECOVERABLE","glean_core::upload::ffi_upload_result","A recoverable error.",null,null],[17,"UPLOAD_RESULT_UNRECOVERABLE","","An unrecoverable error.",null,null],[17,"UPLOAD_RESULT_HTTP_STATUS","","A HTTP response code.",null,null],[11,"builder","glean_core::upload","Creates a new builder-style structure to help build a…",45,[[],["builder",3]]],[11,"is_deletion_request","","Verifies if current request is for a deletion-request ping.",45,[[]]],[11,"pretty_body","","Decompresses and pretty-format the ping payload",45,[[],[["string",3],["option",4]]]],[11,"get_label","","Gets the label to be used in recording error counts for…",46,[[],["option",4]]],[6,"HeaderMap","","A representation for request headers.",null,null],[11,"new","","Creates a new PingUploadManager.",48,[[["into",8],["pathbuf",3]]]],[11,"scan_pending_pings_directories","","Spawns a new thread and processes the pending pings…",48,[[],["joinhandle",3]]],[11,"set_rate_limiter","","Adds rate limiting capability to this upload manager.",48,[[]]],[11,"enqueue_ping_from_file","","Reads a ping file, creates a `PingRequest` and adds it to…",48,[[["glean",3]]]],[11,"clear_ping_queue","","Clears the pending pings queue, leaves the…",48,[[],[["vecdeque",3],["rwlockwriteguard",3]]]],[11,"get_upload_task","","Gets the next `PingUploadTask`.",48,[[["glean",3]],["pinguploadtask",4]]],[11,"process_ping_upload_response","","Processes the response from an attempt to upload a ping.",48,[[["glean",3],["uploadresult",4]]]],[6,"Result","glean_core","A specialized [`Result`] type for this crate\'s operations.",null,null],[11,"new_for_subprocess","","Creates and initializes a new Glean object for use in a…",49,[[["configuration",3]],["result",6]]],[11,"new","","Creates and initializes a new Glean object.",49,[[["configuration",3]],["result",6]]],[11,"destroy_db","","Destroys the database.",49,[[]]],[11,"on_ready_to_submit_pings","","Signals that the environment is ready to submit pings.",49,[[]]],[11,"set_upload_enabled","","Sets whether upload is enabled or not.",49,[[]]],[11,"is_upload_enabled","","Determines whether upload is enabled.",49,[[]]],[11,"get_application_id","","Gets the application ID as specified on instantiation.",49,[[]]],[11,"get_data_path","","Gets the data path of this instance.",49,[[],["path",3]]],[11,"storage","","Gets a handle to the database.",49,[[],["database",3]]],[11,"event_storage","","Gets a handle to the event database.",49,[[],["eventdatabase",3]]],[11,"get_max_events","","Gets the maximum number of events to store before sending…",49,[[]]],[11,"get_upload_task","","Gets the next task for an uploader.",49,[[],["pinguploadtask",4]]],[11,"process_ping_upload_response","","Processes the response from an attempt to upload a ping.",49,[[["uploadresult",4]]]],[11,"snapshot","","Takes a snapshot for the given store and optionally clear…",49,[[],["string",3]]],[11,"submit_ping","","Collects and submits a ping for eventual uploading.",49,[[["option",4],["pingtype",3]],["result",6]]],[11,"submit_ping_by_name","","Collects and submits a ping by name for eventual uploading.",49,[[["option",4]],["result",6]]],[11,"get_ping_by_name","","Gets a [`PingType`] by name.",49,[[],[["pingtype",3],["option",4]]]],[11,"register_ping_type","","Register a new `PingType`.",49,[[["pingtype",3]]]],[11,"set_experiment_active","","Indicates that an experiment is running.",49,[[["string",3],["hashmap",3],["option",4]]]],[11,"set_experiment_inactive","","Indicates that an experiment is no longer running.",49,[[["string",3]]]],[11,"persist_ping_lifetime_data","","Persists Lifetime::Ping data that might be in memory in…",49,[[],["result",6]]],[11,"clear_application_lifetime_metrics","","** This is not meant to be used directly.**",49,[[]]],[11,"is_first_run","","Whether or not this is the first run on this profile.",49,[[]]],[11,"set_debug_view_tag","","Sets a debug view tag.",49,[[]]],[11,"set_source_tags","","Sets source tags.",49,[[["string",3],["vec",3]]]],[11,"set_log_pings","","Sets the log pings debug option.",49,[[]]],[11,"set_dirty_flag","","** This is not meant to be used directly.**",49,[[]]],[11,"is_dirty_flag_set","","** This is not meant to be used directly.**",49,[[]]],[11,"test_is_experiment_active","","Test-only API (exported for FFI purposes).",49,[[["string",3]]]],[11,"test_get_experiment_data_as_json","","Test-only API (exported for FFI purposes).",49,[[["string",3]],[["string",3],["option",4]]]],[11,"test_clear_all_stores","","Test-only API (exported for FFI purposes).",49,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","glean_core::metrics","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"to_bytes","","",6,[[],[["result",4],["dataerror",4],["vec",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"to_bytes","","",9,[[],[["result",4],["dataerror",4],["vec",3]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"to_bytes","","",8,[[],[["result",4],["dataerror",4],["vec",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"to_bytes","","",10,[[],[["result",4],["dataerror",4],["vec",3]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"to_bytes","","",11,[[],[["result",4],["dataerror",4],["vec",3]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"to_bytes","","",12,[[],[["result",4],["dataerror",4],["vec",3]]]],[11,"from","glean_core::ping","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","glean_core::storage","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","glean_core::upload","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"meta","glean_core::metrics","",13,[[],["commonmetricdata",3]]],[11,"meta_mut","","",13,[[],["commonmetricdata",3]]],[11,"meta","","",14,[[],["commonmetricdata",3]]],[11,"meta_mut","","",14,[[],["commonmetricdata",3]]],[11,"meta","","",15,[[],["commonmetricdata",3]]],[11,"meta_mut","","",15,[[],["commonmetricdata",3]]],[11,"meta","","",16,[[],["commonmetricdata",3]]],[11,"meta_mut","","",16,[[],["commonmetricdata",3]]],[11,"meta","","",17,[[],["commonmetricdata",3]]],[11,"meta_mut","","",17,[[],["commonmetricdata",3]]],[11,"meta","","",18,[[],["commonmetricdata",3]]],[11,"meta_mut","","",18,[[],["commonmetricdata",3]]],[11,"meta","","",20,[[],["commonmetricdata",3]]],[11,"meta_mut","","",20,[[],["commonmetricdata",3]]],[11,"meta","","",21,[[],["commonmetricdata",3]]],[11,"meta_mut","","",21,[[],["commonmetricdata",3]]],[11,"meta","","",22,[[],["commonmetricdata",3]]],[11,"meta_mut","","",22,[[],["commonmetricdata",3]]],[11,"meta","","",23,[[],["commonmetricdata",3]]],[11,"meta_mut","","",23,[[],["commonmetricdata",3]]],[11,"meta","","",24,[[],["commonmetricdata",3]]],[11,"meta_mut","","",24,[[],["commonmetricdata",3]]],[11,"meta","","",25,[[],["commonmetricdata",3]]],[11,"meta_mut","","",25,[[],["commonmetricdata",3]]],[11,"meta","","",26,[[],["commonmetricdata",3]]],[11,"meta_mut","","",26,[[],["commonmetricdata",3]]],[11,"from","glean_core","",5,[[["errorkind",4]],["error",3]]],[11,"from","","",5,[[["handleerror",4]],["error",3]]],[11,"from","","",5,[[["error",3]],["error",3]]],[11,"from","","",5,[[["storeerror",4]],["error",3]]],[11,"from","","",5,[[["error",3]],["error",3]]],[11,"from","","",5,[[["osstring",3]],["error",3]]],[11,"from","","",5,[[["infallible",4]],["error",3]]],[11,"from","glean_core::upload","",46,[[]]],[11,"clone","glean_core","",2,[[],["lifetime",4]]],[11,"clone","","",0,[[],["commonmetricdata",3]]],[11,"clone","glean_core::metrics","",6,[[],["recordedevent",3]]],[11,"clone","","",9,[[],["histogramtype",4]]],[11,"clone","","",13,[[],["booleanmetric",3]]],[11,"clone","","",14,[[],["countermetric",3]]],[11,"clone","","",17,[[],["eventmetric",3]]],[11,"clone","","",18,[[],["jwemetric",3]]],[11,"clone","","",19,[[],["labeledmetric",3]]],[11,"clone","","",10,[[],["memoryunit",4]]],[11,"clone","","",7,[[],["pingtype",3]]],[11,"clone","","",21,[[],["quantitymetric",3]]],[11,"clone","","",22,[[],["stringmetric",3]]],[11,"clone","","",23,[[],["stringlistmetric",3]]],[11,"clone","","",11,[[],["timeunit",4]]],[11,"clone","","",26,[[],["uuidmetric",3]]],[11,"clone","","",12,[[],["metric",4]]],[11,"clone","glean_core::upload","",45,[[],["pingrequest",3]]],[11,"clone","glean_core","",1,[[],["configuration",3]]],[11,"default","","",2,[[]]],[11,"default","","",0,[[],["commonmetricdata",3]]],[11,"default","glean_core::ping","",28,[[]]],[11,"eq","glean_core","",2,[[["lifetime",4]]]],[11,"eq","","",4,[[["errortype",4]]]],[11,"eq","glean_core::metrics","",6,[[["recordedevent",3]]]],[11,"ne","","",6,[[["recordedevent",3]]]],[11,"eq","","",11,[[["timeunit",4]]]],[11,"eq","","",12,[[["metric",4]]]],[11,"ne","","",12,[[["metric",4]]]],[11,"eq","glean_core::upload","",45,[[["pingrequest",3]]]],[11,"ne","","",45,[[["pingrequest",3]]]],[11,"eq","","",47,[[["pinguploadtask",4]]]],[11,"ne","","",47,[[["pinguploadtask",4]]]],[11,"fmt","glean_core","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","glean_core::metrics","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","glean_core::upload","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","glean_core","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"try_from","","",2,[[],[["result",4],["lifetime",4]]]],[11,"try_from","","",4,[[],[["result",4],["errortype",4]]]],[11,"try_from","glean_core::metrics","",9,[[],[["histogramtype",4],["result",4]]]],[11,"try_from","","",10,[[],[["memoryunit",4],["result",4]]]],[11,"try_from","","",11,[[],[["timeunit",4],["result",4]]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]]],"p":[[3,"CommonMetricData"],[3,"Configuration"],[4,"Lifetime"],[4,"ErrorKind"],[4,"ErrorType"],[3,"Error"],[3,"RecordedEvent"],[3,"PingType"],[3,"DistributionData"],[4,"HistogramType"],[4,"MemoryUnit"],[4,"TimeUnit"],[4,"Metric"],[3,"BooleanMetric"],[3,"CounterMetric"],[3,"CustomDistributionMetric"],[3,"DatetimeMetric"],[3,"EventMetric"],[3,"JweMetric"],[3,"LabeledMetric"],[3,"MemoryDistributionMetric"],[3,"QuantityMetric"],[3,"StringMetric"],[3,"StringListMetric"],[3,"TimespanMetric"],[3,"TimingDistributionMetric"],[3,"UuidMetric"],[8,"MetricType"],[3,"PingMaker"],[3,"StorageManager"],[8,"Boolean"],[8,"Counter"],[8,"CustomDistribution"],[8,"Datetime"],[8,"Event"],[8,"Jwe"],[8,"Labeled"],[8,"MemoryDistribution"],[8,"Ping"],[8,"Quantity"],[8,"String"],[8,"StringList"],[8,"Timespan"],[8,"TimingDistribution"],[8,"Uuid"],[3,"PingRequest"],[4,"UploadResult"],[4,"PingUploadTask"],[3,"PingUploadManager"],[3,"Glean"]]},\
"glean_ffi":{"doc":"","i":[[4,"MemoryUnit","glean_ffi","Different resolutions supported by the memory related…",null,null],[13,"Byte","","1 byte",0,null],[13,"Kilobyte","","2^10 bytes",0,null],[13,"Megabyte","","2^20 bytes",0,null],[13,"Gigabyte","","2^30 bytes",0,null],[4,"TimeUnit","","Different resolutions supported by the time related metric…",null,null],[13,"Nanosecond","","Truncate to nanosecond precision.",1,null],[13,"Microsecond","","Truncate to microsecond precision.",1,null],[13,"Millisecond","","Truncate to millisecond precision.",1,null],[13,"Second","","Truncate to second precision.",1,null],[13,"Minute","","Truncate to minute precision.",1,null],[13,"Hour","","Truncate to hour precision.",1,null],[13,"Day","","Truncate to day precision.",1,null],[17,"UPLOAD_RESULT_RECOVERABLE","","A recoverable error.",null,null],[17,"UPLOAD_RESULT_UNRECOVERABLE","","An unrecoverable error.",null,null],[17,"UPLOAD_RESULT_HTTP_STATUS","","A HTTP response code.",null,null],[4,"Lifetime","","The supported metrics\' lifetimes.",null,null],[13,"Ping","","The metric is reset with each sent ping",2,null],[13,"Application","","The metric is reset on application restart",2,null],[13,"User","","The metric is reset with each user profile",2,null],[3,"FfiConfiguration","","Configuration over FFI.",null,null],[12,"data_dir","","",3,null],[12,"package_name","","",3,null],[12,"language_binding_name","","",3,null],[12,"upload_enabled","","",3,null],[12,"max_events","","",3,null],[12,"delay_ping_lifetime_io","","",3,null],[5,"glean_enable_logging","","Initialize the logging system based on the target…",null,[[]]],[5,"glean_enable_logging_to_fd","","Initialize the logging system to send JSON messages to a…",null,[[]]],[5,"glean_initialize","","Safety",null,[[]]],[5,"glean_on_ready_to_submit_pings","","",null,[[]]],[5,"glean_is_upload_enabled","","",null,[[]]],[5,"glean_set_upload_enabled","","",null,[[]]],[5,"glean_submit_ping_by_name","","",null,[[["ffistr",3]]]],[5,"glean_ping_collect","","",null,[[["ffistr",3]]]],[5,"glean_set_experiment_active","","",null,[[["ffistr",3]]]],[5,"glean_set_experiment_inactive","","",null,[[["ffistr",3]]]],[5,"glean_experiment_test_is_active","","",null,[[["ffistr",3]]]],[5,"glean_experiment_test_get_data","","",null,[[["ffistr",3]]]],[5,"glean_clear_application_lifetime_metrics","","",null,[[]]],[5,"glean_set_dirty_flag","","",null,[[]]],[5,"glean_is_dirty_flag_set","","",null,[[]]],[5,"glean_test_clear_all_stores","","",null,[[]]],[5,"glean_destroy_glean","","",null,[[]]],[5,"glean_is_first_run","","",null,[[]]],[5,"glean_get_upload_task","","",null,[[]]],[5,"glean_process_ping_upload_response","","Process and free a `FfiPingUploadTask`.",null,[[]]],[5,"glean_initialize_for_subprocess","","Safety",null,[[]]],[5,"glean_set_debug_view_tag","","",null,[[["ffistr",3]]]],[5,"glean_set_log_pings","","",null,[[]]],[5,"glean_set_source_tags","","",null,[[]]],[5,"glean_str_free","","Public destructor for strings managed by the other side of…",null,[[]]],[0,"byte_buffer","","ByteBuffer is a struct that represents an array of bytes…",null,null],[3,"ByteBuffer","glean_ffi::byte_buffer","ByteBuffer is a struct that represents an array of bytes…",null,null],[11,"new_with_size","","Creates a `ByteBuffer` of the requested size, zero-filled.",4,[[]]],[11,"from_vec","","Creates a `ByteBuffer` instance from a `Vec` instance.",4,[[["vec",3]]]],[11,"into_vec","","Convert this `ByteBuffer` into a Vec. This is the only way…",4,[[],["vec",3]]],[11,"destroy","","Reclaim memory stored in this ByteBuffer.",4,[[]]],[0,"ping_type","glean_ffi","",null,null],[5,"glean_destroy_ping_type","glean_ffi::ping_type","",null,[[]]],[5,"glean_new_ping_type","","",null,[[["ffistr",3]]]],[5,"glean_test_has_ping_type","","",null,[[["ffistr",3]]]],[5,"glean_register_ping_type","","",null,[[]]],[0,"upload","glean_ffi","FFI compatible types for the upload mechanism.",null,null],[4,"FfiPingUploadTask","glean_ffi::upload","A FFI-compatible representation for the PingUploadTask.",null,null],[13,"Upload","","",5,null],[12,"document_id","glean_ffi::upload::FfiPingUploadTask","",6,null],[12,"path","","",6,null],[12,"body","","",6,null],[12,"headers","","",6,null],[13,"Wait","glean_ffi::upload","",5,null],[13,"Done","","",5,null],[0,"upload_result","","Result values of attempted ping uploads encoded for FFI use.",null,null],[17,"UPLOAD_RESULT_RECOVERABLE","glean_ffi::upload::upload_result","A recoverable error.",null,null],[17,"UPLOAD_RESULT_UNRECOVERABLE","","An unrecoverable error.",null,null],[17,"UPLOAD_RESULT_HTTP_STATUS","","A HTTP response code.",null,null],[14,"define_infallible_handle_map_deleter","glean_ffi","",null,null],[14,"define_metric","","Define the global handle map, constructor and destructor…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"to_bytes","","",0,[[],[["dataerror",4],["result",4],["vec",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"to_bytes","","",1,[[],[["dataerror",4],["result",4],["vec",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","glean_ffi::byte_buffer","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","glean_ffi::upload","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"serialize","glean_ffi","",1,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"clone","","",1,[[],["timeunit",4]]],[11,"clone","","",0,[[],["memoryunit",4]]],[11,"clone","","",2,[[],["lifetime",4]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","","",1,[[],[["result",4],["timeunit",4]]]],[11,"try_from","","",0,[[],[["memoryunit",4],["result",4]]]],[11,"try_from","","",2,[[],[["lifetime",4],["result",4]]]],[11,"default","","",2,[[],["lifetime",4]]],[11,"deserialize","","",0,[[],[["result",4],["memoryunit",4]]]],[11,"deserialize","","",1,[[],[["timeunit",4],["result",4]]]],[11,"eq","","",1,[[["timeunit",4]]]],[11,"eq","","",2,[[["lifetime",4]]]],[11,"drop","glean_ffi::upload","",5,[[]]],[11,"from","glean_ffi::byte_buffer","",4,[[["vec",3]]]],[11,"from","glean_ffi::upload","",5,[[["pinguploadtask",4]]]],[11,"default","glean_ffi::byte_buffer","",4,[[]]],[11,"ffi_default","glean_ffi::upload","",5,[[],["ffipinguploadtask",4]]],[11,"into_ffi_value","","",5,[[],["ffipinguploadtask",4]]],[11,"as_bytes","glean_ffi","Converts a value in the given unit to bytes.",0,[[]]],[11,"format_pattern","","Formats the given time unit, truncating the time if needed.",1,[[]]],[11,"duration_convert","","Converts a duration to the requested time unit.",1,[[["duration",3]]]],[11,"as_nanos","","Converts a duration in the given unit to nanoseconds.",1,[[]]],[11,"as_str","","String representation of the lifetime.",2,[[]]]],"p":[[4,"MemoryUnit"],[4,"TimeUnit"],[4,"Lifetime"],[3,"FfiConfiguration"],[3,"ByteBuffer"],[4,"FfiPingUploadTask"],[13,"Upload"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);